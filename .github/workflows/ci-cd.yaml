name: CI/CD Pipeline

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.9

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run tests
      run: |
        pytest tests/

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push Docker image
      run: |
        docker build -t ${{ secrets.DOCKER_IMAGE }}:latest .
        docker push ${{ secrets.DOCKER_IMAGE }}:latest

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Google Cloud SDK
      uses: google-github-actions/setup-gcloud@v1
      with:
        version: 'latest'
        project_id: ${{ secrets.GCP_PROJECT_ID }}

    - name: Decode and write service account key
      run: |
        echo "${{ secrets.GCP_SA_KEY }}" | base64 --decode > $HOME/gcloud-key.json

    - name: Activate Service Account
      run: |
        gcloud auth activate-service-account --key-file=$HOME/gcloud-key.json
        gcloud config set project ${{ secrets.GCP_PROJECT_ID }}
        gcloud config set compute/zone us-central1-a

    - name: Authenticate to GKE
      run: |
        gcloud container clusters get-credentials bookstore-cluster

    - name: Install Helm
      run: |
        curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash

    - name: Install gke-gcloud-auth-plugin
      run: |
        gcloud components install gke-gcloud-auth-plugin --quiet

    - name: Deploy with Helm
      run: |
        helm upgrade --install bookstore ./bookstore \
        --set image.repository=${{ secrets.DOCKER_IMAGE }} \
        --set image.tag=latest \
        --set env.DATABASE_URL="sqlite:///./test.db" \
        --set env.SECRET_KEY="c2VjcmV0X2tleQ=="
